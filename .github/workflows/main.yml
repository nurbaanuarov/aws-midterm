name: nurbaanuarov
on:
  push:
    branches: [ "main" ]  # Trigger on push to 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  package-and-publish:
    needs:
      - build

    name: üê≥ Package & Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/aws-midterm
          tags: |
            type=ref,event=tag
            type=ref,event=pr
            type=sha,event=branch,prefix=,suffix=,format=short

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aws-midterm:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs:
      - package-and-publish
    runs-on: self-hosted  # This will use your self-hosted runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Pull Docker Image
        run: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/aws-midterm:latest
  
      - name: Deploy Docker Container
        run: |
          sudo docker stop my-container || true
          sudo docker rm my-container || true
          sudo docker run -d --name my-container -p 8080:5000 ${{ secrets.DOCKER_USERNAME }}/aws-midterm:latest
  
      - name: Clean up unused Docker resources
        run: |
          sudo docker system prune -f
